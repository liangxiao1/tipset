{
    "tip_1": {
        "subject": "Upgrade/update Fedora26 to 27",
        "demo_steps": [
            {"step": "dnf install dnf-plugin-system-upgrade", "out": ""},
            {"step": "dnf system-upgrade download --refresh --releasever=32 --nogpgcheck", "out": ""},
            {"step": "dnf system-upgrade reboot", "out": ""},
            {"step": "dnf --releasever 27 downgrade xen (downgrade xen pkg only)", "out": ""}
        ],
        "tags": "fedora, upgrade, update, dnf",
        "comments": "",
        "link": ""
    },
    "tip_2": {
        "subject": "Switch system edition",
        "demo_steps": [
            {"step": "dnf grouplist -v", "out": ""},
            {"step": "dnf install @kde-desktop-environment", "out": ""},
            {"step": "dnf -y group install 'Fedora Workstation'", "out": ""},
            {"step": "systemctl set-default graphical.target", "out": ""}
        ],
        "tags": "fedora, server, dnf, yum",
        "comments": "",
        "link": ""
    },
    "tip_3": {
        "subject": "Look for which pkg provides the cmd or file(belong to which pkg)",
        "demo_steps": [
            {"step": "dnf provides *stubs-32.h", "out": ""},
            {"step": "dnf provides isoinfo", "out": ""}
        ],
        "tags": "dnf, yum",
        "comments": "",
        "link": ""
    },
    "tip_4": {
        "subject": "Repair broken pkgs",
        "demo_steps": [
            {"step": "dnf reinstall \\*", "out": ""}
        ],
        "tags": "dnf, yum",
        "comments": "remove one slash when run cmd",
        "link": ""
    },
    "tip_5": {
        "subject": "Grubby to update boot index and parameters",
        "demo_steps": [
            {"step": "grubby --info=ALL" , "out": ""},
            {"step": "grubby --set-default-index=1", "out": ""},
            {"step": "grubby --default-index", "out": ""},
            {"step": "grubby --default-kernel", "out": ""},
            {"step": "grubby --update-kernel=ALL --args='initcall_blacklist=arm_smmu_driver_init'", "out": ""},
            {"step": "grubby --update-kernel=ALL --remove-args='initcall_blacklist=arm_smmu_driver_init'", "out": ""},
            {"step": "grubby --update-kernel=ALL --args='irqchip.gicv3_pseudo_nmi=1'", "out": ""},
            {"step": "grubby --update-kernel=ALL  --remove-args='emergency'", "out": ""},
            {"step": "grubby --update-kernel=ALL  --remove-args='xen_emul_unplug=unnecessary'", "out": ""},
            {"step": "grubby --update-kernel=ALL --args='xen_emul_unplug=unnecessary'", "out": ""},
            {"step": "grubby --update-kernel=ALL --args='xen_emul_unplug=never'", "out": ""},
            {"step": "grubby --update-kernel=ALL --args='no_console_suspend'", "out": ""},
            {"step": "grubby --update-kernel=ALL --args='kmemleak=on'", "out": ""},
            {"step": "grubby --update-kernel=ALL  --remove-args='kmemleak=on'", "out": ""},
            {"step": "grubby --update-kernel=ALL --args='intel_iommu=on pci=realloc'", "out": ""}
        ],
        "tags": "grubby, boot",
        "comments": "",
        "link": "https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html/system_administrators_guide/sec-making_persistent_changes_to_a_grub_2_menu_using_the_grubby_tool"
    },
    "tip_6": {
        "subject": "Boot from grub manually",
        "demo_steps": [
            {"step": "insmod lvm", "out": ""},
            {"step": "linux16 (hd0,msdos1)/vmlinuz-5.0.3-300.fc30.x86_64 root=/dev/mapper/fedora_wasa-root ro rd.lvm.lv=fedora_wasa/root", "out": ""},
            {"step": "initrd16 (hd0,msdos1)/initramfs-5.0.3-300.fc30.x86_64.img", "out": ""},
            {"step": "set root=(lvm,fedora_wasa-root)/", "out": ""},
            {"step": "boot", "out": ""}
        ],
        "tags": "grub, boot",
        "comments": "useful when boot menu was broken",
        "link": ""
    },
    "tip_7": {
        "subject": "Check memory leak",
        "demo_steps": [
            {"step": "mount -t debugfs nodev /sys/kernel/debug/", "out": ""},
            {"step": "echo scan > /sys/kernel/debug/kmemleak", "out": ""},
            {"step": "cat /sys/kernel/debug/kmemleak", "out": ""}
        ],
        "tags": "debug, memleaks",
        "comments": "debug kernel boot required",
        "link": ""
    },
    "tip_8": {
        "subject": "Setup nfs, export nfs",
        "demo_steps": [
            {"step": "yum install -y nfs-utils", "out": ""},
            {"step": "systemctl enable --now rpcbind nfs-server", "out": ""},
            {"step": "systemctl  start rpcbind nfs-server", "out": ""},
            {"step": "exportfs -o ro,insecure_locks,all_squash,fsid=1 *:/", "out": ""},
            {"step": "echo \"$nfs_ip:/$dir /$target_dir nfs    defaults    0 0\" >>/etc/fstab (automount)", "out": ""}
        ],
        "tags": "nfs, systemd",
        "comments": "",
        "link": ""
    },
    "tip_9": {
        "subject": "insights-client generate archive only without uploading",
        "demo_steps": [
            {"step": "insights-client --no-upload --keep-archive", "out": ""}
        ],
        "tags": "insights, insights-client",
        "comments": "",
        "link": ""
    },
    "tip_10": {
        "subject": "tcpdump dump traffic on a network",
        "demo_steps": [
            {"step": "tcpdump -n -i eth0 esp and udp port 500 and udp port 4500", "out": ""},
            {"step": "tcpdump -nni ens4 -e icmp[icmptype] == 8", "out": ""},
            {"step": "tcpdump -nni eth0 icmp", "out": ""}
        ],
        "tags": "network, tcpdump, debug",
        "comments": "",
        "link": ""
    },
    "tip_11": {
        "subject": "OS shortcuts",
        "demo_steps": [
            {"step": "Ctrl+L: Clear the screen. This is similar to running the “clear” command.", "out": ""},
            {"step": "Ctrl+S: Stop all output to the screen. This is particularly useful when running commands with a lot of long, verbose output, but you don’t want to stop the command itself with Ctrl+C.", "out": ""},
            {"step": "Ctrl+Q: Resume output to the screen after stopping it with Ctrl+S.", "out": ""},
            {"step": "Ctrl+A or Home: Go to the beginning of the line.", "out": ""},
            {"step": "Ctrl+E or End: Go to the end of the line.", "out": ""},
            {"step": "Alt+B: Go left (back) one word.", "out": ""},
            {"step": "Ctrl+B: Go left (back) one character.", "out": ""},
            {"step": "Alt+F: Go right (forward) one word.", "out": ""},
            {"step": "Ctrl+F: Go right (forward) one character.", "out": ""},
            {"step": "Ctrl+W: Cut the word before the cursor, adding it to the clipboard.", "out": ""},
            {"step": "Ctrl+K: Cut the part of the line after the cursor, adding it to the clipboard.", "out": ""},
            {"step": "Ctrl+U: Cut the part of the line before the cursor, adding it to the clipboard.", "out": ""},
            {"step": "Ctrl+Y: Paste the last thing you cut from the clipboard. The y here stands for “yank”.", "out": ""},
            {"step": "Ctrl+R: Recall the last command matching the characters you provide. Press this shortcut and start typing to search your bash history for a command.", "out": ""},
            {"step": "Ctrl+O: Run a command you found with Ctrl+R.", "out": ""},
            {"step": "Ctrl+G: Leave history searching mode without running a command.", "out": ""}
        ],
        "tags": "cli, shortcut, terminal",
        "comments": "",
        "link": ""
    },
    "tip_12": {
        "subject": "Customize qcow2 image",
        "demo_steps": [
            {"step": "yum install -y virt-install libvirt-daemon-config-network libvirtd, libguestfs-tools", "out": ""},
            {"step": "virsh net-start default", "out": ""},
            {"step": "virt-install --name vmname --memory 2048 --vcpus 2 --disk size=8,bus=virtio --location rhel-7.0-x86_64-dvd.iso --os-variant=rhel7.0", "out": ""},
            {"step": "export LIBGUESTFS_BACKEND=direct", "out": ""},
            {"step": "virt-customize -a rhel-guest-image-8.2-290.x86_64.raw --run-command \"echo 'add_drivers+=\\\" xen-netfront xen-blkfront \\\"' > /etc/dracut.conf.d/xen.conf\"", "out": ""},
            {"step": "virt-customize -a rhel-guest-image-8.2-290.x86_64.raw --run-command \"dracut -f /boot/initramfs-$(rpm -q kernel --qf '%{V}-%{R}.%{arch}\n').img $(rpm -q kernel --qf '%{V}-%{R}.%{arch}\n')\"", "out": ""},
            {"step": "virt-edit -a rhel-guest-image-8.2-290.x86_64.raw /etc/dracut.conf.d/xen.conf", "out": ""},
            {"step": "virt-customize -a rhel-guest-image-7.7-261.x86_64.qcow2 --root-password password:redhat --uninstall cloud-init", "out": ""},
            {"step": "qemu-img info rhel8.AWS", "out": ""},
            {"step": "qemu-img resize rhel8.AWS 9G", "out": ""}
        ],
        "tags": "virt-install, libguestfs, libvirt, iso",
        "comments": "",
        "link": ""
    },
    "tip_13": {
        "subject": "register rhel AMI from local image to aws ec2",
        "demo_steps": [
            {"step": "qemu-img convert -f qcow2 -O raw rhel-server-7.7-1-x86_64-kvm.qcow2 rhel-server-7.7-1-x86_64-kvm.raw", "out": ""},
            {"step": "aws s3 cp rhel-server-7.7.1-x86_64-kvm.raw s3://s3-bucket-name", "out": ""},
            {"step": "aws ec2 import-image --platform Linux --license-type BYOL --no-encrypted --description 'xiliang_7.9gadoc' --architecture x86_64 --disk-containers Format=Raw,UserBucket=\"{S3Bucket=virtqes1,S3Key=rhel-server-ec2-7.9-30.x86_64.raw}\" --region us-east-1", "out": ""}
        ],
        "tags": "AMI, ec2, rhel",
        "comments": "pls check doc for rhel8",
        "link": "https://access.redhat.com/documentation/en-us/red_hat_enterprise_linux/7/html-single/deploying_red_hat_enterprise_linux_7_on_public_cloud_platforms/index?#deploying-a-virtual-machine-on-aws_cloud-content"
    },
    "tip_14": {
        "subject": "find command usage examples",
        "demo_steps": [
            {"step": "find -L . -name '*raw' -exec ls -l {} \\;", "out": ""},
            {"step": "find . -type -f |xargs grep 'wget'", "out": ""},
            {"step": "find . -name *results.xml* -exec readlink -f  {} \\;", "out": ""},
            {"step": "find . -mtime +7 -type d -exec ls {} \\;", "out": ""},
            {"step": "find /dirname -mtime +7 -exec rm -rf {} \\;", "out": ""},
            {"step": "find /dirname -mtime +7 -exec ls {} \\;", "out": ""},
            {"step": "find /dirname* -mtime +30 -exec rm -rf {} \\;", "out": ""},
            {"step": "find /sys/kernel/iommu_groups/ -type l", "out": ""},
            {"step": "find /path/to/search/ -type f -iname \"*.mp4\" -printf '%s %p\\n'| sort -nr | head -10", "out": ""}
        ],
        "tags": "command, find",
        "comments": "",
        "link": ""
    }
}
